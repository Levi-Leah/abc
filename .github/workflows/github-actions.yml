
name: Build the Infrastructure
on:
  push:
    branches:
    - main

jobs:
  # if: contains(github.event.head_commit.message, 'app/')
  build-deploy:
    runs-on: ubuntu-latest

    env: # Declare environment variables once for the entire job
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    # - name: Log in to Docker Hub
    #   uses: docker/login-action@v3
    #   with:
    #     username: ${{ secrets.DOCKER_USERNAME }}
    #     password: ${{ secrets.DOCKER_PASSWORD }}

    # - name: Build and push Docker image
    #   run: |
    #     docker build -t ${{ secrets.DOCKER_USERNAME }}/${{ github.event.repository.name }}:latest .
    #     docker push ${{ secrets.DOCKER_USERNAME }}/${{ github.event.repository.name }}:latest

    - name: Set up Azure CLI
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 'latest'

    - name: Check if Storage Account Exists
      id: check_account
      run: |
        name_avaliable=$(az storage account check-name --name xyzstorageaccount1234 --query 'nameAvailable' --output tsv)
        if [[ "$name_avaliable" == "true" ]]; then
          echo "Storage account does not exist."
          echo "storage_exists=false" >> $GITHUB_ENV
        else
          echo "Storage account exists."
          echo "storage_exists=true" >> $GITHUB_ENV
        fi

    - name: Create Storage Account and Container if it does not exists
      if: ${{ env.storage_exists == 'false' }}
      run: |

        # Create resource group for backend storage
        az group create --name "XYZStorageResourceGroup" --location "Japan West"
        # Create storage account for Terraform state
        az storage account create --name "xyzstorageaccount1234" --resource-group "XYZStorageResourceGroup" --location "Japan West" --sku Standard_LRS
        # Create storage container for Terraform state
        az storage container create --name "XYZtStorageContainer" --account-name "XYZtStorageContainer"

    - name: Terraform Init
      run: terraform init
      working-directory: ./terraform-config

    - name: Terraform Plan
      run: terraform plan
      working-directory: ./terraform-config

    - name: Terraform Apply
      run: terraform apply -auto-approve
      working-directory: ./terraform-config

    - name: Helm
      uses: azure/setup-helm@v4
      with:
        version: latest

    - name: Deploy Helm
      run: |
        helm upgrade --install ${{ github.event.repository.name }} ${{ github.workspace }}/helm-config --kubeconfig ${{ github.workspace }}/terraform-config/kubeconfig

    # - name: Verify Application
    #   run: |
    #     kubectl get services
    #     kubectl get pods
