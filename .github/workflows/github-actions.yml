
name: Build the Infrastructure
on:
  push:
    branches:
    - main

jobs:
  # if: contains(github.event.head_commit.message, 'app/')
  build-deploy:
    runs-on: ubuntu-latest

    env: # Declare environment variables once for the entire job
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/${{ github.event.repository.name }}:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/${{ github.event.repository.name }}:latest

      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/${{ github.event.repository.name }}:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/${{ github.event.repository.name }}:latest

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 'latest'

      - name: Terraform Init
        run: terraform init
        working-directory: ./terraform-config

      - name: Terraform Plan
        run: terraform plan
        working-directory: ./terraform-config

      - name: Terraform Apply
        run: terraform apply -auto-approve
        working-directory: ./terraform-config

      - name: Log in to Azure
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Authenticate with AKS and Set KUBECONFIG
        run: |
          mkdir -p ~/.kube/
          az aks get-credentials --resource-group ABCResourceGroup --name ABCCluster --file ~/.kube/config
          export KUBECONFIG=~/.kube/config
          echo $KUBECONFIG

      - name: Set up Helm
        uses: Azure/setup-helm@v4.2.0

      - name: Deploy Helm
        run: |
          echo $KUBECONFIGs
          helm upgrade --install nodejs-app ./helm-config \
          --set image.repository=${{ secrets.DOCKER_USERNAME }}/${{ github.event.repository.name }}:latest

      - name: Verify Application
        run: |
          kubectl get services
          kubectl get pods
